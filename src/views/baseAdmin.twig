<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{% block title %}Nomadia{% endblock %}</title>



  

  {% block style %}


  {% endblock %}
      <link rel="stylesheet" href="/assets/css/dashboard.css">


  {# === Toast CSS intégré ici pour éviter un fichier externe (tu peux extraire après) === #}
 <style>
  .toast-container {
    position: fixed;
    top: 24px;
    left: 50%;
    transform: translateX(-50%);
    z-index: 9999;
    display: flex;
    flex-direction: column;
    gap: 10px;
    min-width: 320px;
    max-width: 94vw;
    pointer-events: none;
  }
  .toast {
    display: flex;
    align-items: center;
    width: 100%;
    max-width: 320px;
    padding: 1rem 1.1rem 1rem 1rem;
    margin-bottom: 0.5rem;
    background: #fff;
    color: #64748b;
    border-radius: 0.75rem;
    box-shadow: 0 2px 12px rgba(0,0,0,0.10);
    font-size: 1rem;
    font-weight: 400;
    pointer-events: auto;
    opacity: 0;
    animation: fadeInOut 3.6s cubic-bezier(0.22,1,0.36,1) forwards;
  }
  .toast--success   { border-left: none; }
  .toast--error     { border-left: none; }
  .toast--info      { border-left: none; }
  /* Icône ronde à gauche */
  .toast__icon {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    width: 2.15rem;
    height: 2.15rem;
    border-radius: 0.75rem;
    background: #e6f8ee;   /* vert clair par défaut */
    color: #22c55e;
    font-size: 1.35em;
    margin-right: 0.9rem;
  }
  .toast--success .toast__icon {
    background: #e6f8ee;
    color: #22c55e;
  }
  .toast--error .toast__icon {
    background: #fdeaea;
    color: #ef4444;
  }
  .toast--info .toast__icon {
    background: #e6f0fa;
    color: #3b82f6;
  }
  .toast__text {
    flex: 1 1 auto;
    font-size: 1rem;
    color: #334155;
    font-weight: 400;
  }
  .toast__close {
    margin-left: auto;
    margin-right: -0.5rem;
    margin-top: -0.5rem;
    margin-bottom: -0.5rem;
    background: #fff;
    color: #94a3b8;
    border: none;
    border-radius: 9999px;
    width: 2rem;
    height: 2rem;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background .15s, color .15s;
    font-size: 1.2em;
    cursor: pointer;
    pointer-events: auto;
  }
  .toast__close:hover {
    background: #f1f5f9;
    color: #334155;
  }
  @keyframes fadeInOut {
    0%   { opacity: 0; transform: translateY(-16px);}
    10%  { opacity: 1; transform: translateY(0);}
    90%  { opacity: 1;}
    100% { opacity: 0; transform: translateY(-16px);}
  }
</style>

</head>
<body class="bg-beige text-brun font-sans">




  {# === TOASTS FLASH === #}
  <div class="toast-container" id="toast-container">
    {% for msg in success %}
      <div class="toast toast--success">
        <span class="toast__icon">✅</span>
        <span>{{ msg }}</span>
        <button class="toast__close" aria-label="Fermer">&times;</button>
      </div>
    {% endfor %}
    {% for msg in error %}
      <div class="toast toast--error">
        <span class="toast__icon">❌</span>
        <span>{{ msg }}</span>
        <button class="toast__close" aria-label="Fermer">&times;</button>
      </div>
    {% endfor %}
    {% for msg in info %}
      <div class="toast toast--info">
        <span class="toast__icon">ℹ️</span>
        <span>{{ msg }}</span>
        <button class="toast__close" aria-label="Fermer">&times;</button>
      </div>
    {% endfor %}
  </div>
  {# === FIN TOASTS === #}

 <div class="main-container">
    {# === Inclusion de la sidebar admin === #}
    {% include 'partials/headerAdmin.twig' %}
   

    {# === Zone de contenu principal #}
    <main class="admin-main-content">
      {% block main %}{% endblock %}
    </main>
  </div>



  {# === Script toast (auto-disparition & fermeture manuelle) === #}
  <script>
    // Fermeture manuelle
    document.querySelectorAll('.toast__close').forEach(btn => {
      btn.addEventListener('click', e => {
        const toast = btn.closest('.toast');
        toast.style.opacity = 0;
        setTimeout(() => toast.remove(), 320);
      });
    });
    // Auto remove (évite les toasts "vides" sur back/forward)
    setTimeout(() => {
      document.querySelectorAll('.toast').forEach(toast => {
        toast.style.opacity = 0;
        setTimeout(() => toast.remove(), 320);
      });
    }, 3500);
  </script>

  {% block script %}{% endblock %}
</body>
</html>
